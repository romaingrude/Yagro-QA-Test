/* NOTE:
 *  1) In general these should be lower-case (or rather, the case should not be considered significant).
 *  Use e.g. `class="text-capitalize"` to ensure correct casing at the point of use,
 *  rather than having multiple messages here for various casing (e.g. some legacy `foobar`, `foobarInContext` messages).
 *
 */
export default {
  addEditBudgetDialog: {
    addAreaInVariableCosts: 'Please add area in the variable costs table',
    budgets: 'budgets',
    crop: 'Crop',
    variableCosts: 'Variable Costs',
    fixedCosts: 'Fixed Costs',
    budgetedPrice: 'Budgeted Price',
    budgetedSales: 'Budgeted Sales',
    budgetedBreakEven: 'Budgeted Break Even',
    total: 'total',
    currencyBracketed: '(£)',
    currencyPerHectare: '£/ha',
    cellEditInfo: '* Click inside a cell to add or edit tables',
    yes: 'Yes',
    no: 'No',
    warning: 'warning',
    success: 'success',
    yAlertText: 'This could affect your fixed costs. <br> Would you like to apply the changes to fixed costs?',
    noAreaAvailable: 'No area available',
    unsavedChanges: 'Unsaved changes',
    selectCrop: 'Select crop',
    fieldRequired: 'field is required',
    setValOnThreeYrAv: 'Set values based on your 3-year average',
    threeYearAverageTitle: 'Three Year Average',
    threeYearAvSuccess: 'Ready! Your budget was calculated using your historical data.',
    threeYearAvFailed: 'Sorry, we could not calculate a budget for you. You have no historical data for this crop.',
  },
  agGrid: {
    first: 'First',
    last: 'Last',
    next: 'Next',
    previous: 'Prev',
  },
  alerts: {
    tabTitle: 'Alerts',
    title: 'MarketWatch - Alerts',
  },
  analytics: {
    description: 'Understand more about the true performance of your fields, varieties & input programmes.',
    explorerInfo:
      'Gain deeper insight into your farm business by bringing together your information and wider market analysis.',
    prices: {
      agronomy: 'Agronomy',
      buyingScoreTitle: 'Overall buying score for',
      buyingScore: 'Buying score',
      buyingWell: 'Buying well',
      contactButton: 'Contact us to learn how',
      distributor: 'Distributor',
      improveBuyingScoreQuestion: 'Want to improve your buying score?',
      medium: 'Medium',
      myPurchases: 'my purchases',
      rangeOfMarketPrices: 'Range of Market Prices',
      limitedDataAvailable: 'Limited data available',
      name: 'Name',
      noSavings: 'no savings',
      purchasedMsg: ({ named }) =>
        `Spend on ${named('name')} over ${named('length')} purchases and ${named('numReturns')} returns`,
      overspendMsg: 'Overspend (%)',
      overspendText: 'This is your overspend, in percentage terms, of the price you’ve paid above the market price for this brand.',
      noDataMsg: 'We are still collecting price data on this product. This will display as soon as we have sufficient data to give a meaningful, anonymous picture of the market.',
      brandOpportunityMgs: 'Potential same brand savings',
      theCheapestPriceMsg: 'You already have the cheapest price',
      theCheapestProductMsg: 'You already have the cheapest product',
      averagePriceMsg: 'Your average unit price',
      potentialAlternativeMsg: 'Potential alternative savings',
      ordered: 'Ordered',
      price: 'Price',
      tableAltBrandOpHeading: 'Alternative Brand Opportunity',
      tableBrandOpHeading: 'This Brand Opportunity',
      tableOverspendHeading: 'Overspend',
      tableProductHeading: 'Product Name',
      tablePurchasedHeading: 'Purchased',
    },
    pricesInfo: 'Find out how much you could save, where and why, with complete visibility of Ag Chem prices.',
    programmeCheckInfo: 'Understand more about the true performance of your fields, varieties & input programmes.',
    programmes: {
      noFieldData: 'No fields found.',
      noProgrammeData: 'No product applications found.',
    },
    viewIn: 'view in',
  },
  breakEvenFeature: {
    budgetedBreakEven: 'Budgeted break even',
    budgetedBreakEvenTip:
      'The budgeted break even is based on your budgeted data. It is calculated using the following equation: (fixed costs (ha) + variable costs (ha)) / yield (ha) = breakeven sale figure',
    rollingBreakEven: 'Rolling break even',
    rollingBreakEvenTip:
      'The rolling break even is based on the updated data we receive from you. It is calculated using the following equation: (fixed costs (ha) + variable costs (ha)) / yield (ha) = breakeven sale figuren',
  },
  budgets: {
    addBudgets: 'Add budgets',
    addCropBudget: 'Add crop budget',
    addYear: 'Add year',
    useExistingYear: 'Use existing year',
    budgetedGrossMargin: 'Budgeted Gross Margin',
    budgetedGrossMarginMsg: 'The Farm Gross Margin is the output of all crops minus the associated variable costs.',
    chemicalCost: 'Chemical Cost',
    clickToEdit: 'Click inside a cell to add or edit tables',
    columns: {
      actions: 'Actions',
      area: 'Area',
      chemical: 'Chemical',
      contractsAndHire: 'Contracts & Hire',
      crop: 'Crop',
      fuel: 'fuel',
      grossMargin: 'GM',
      labour: 'Labour',
      machinery: 'Machinery',
      overheads: 'Overheads',
      price: 'Price',
      rentAndInterest: 'Rent & Interest',
      seed: 'Seed',
      fertiliser: 'Fertiliser',
      yield: 'Yield',
    },
    cropBudget: 'Crop Budget',
    editCropBudget: 'Edit crop budget',
    fertiliserCost: 'Fertiliser Cost',
    fixedCosts: 'Fixed costs',
    goToMarketShort: 'GM',
    noBudgetsDefined: 'No budgets defined for',
    pleaseAddAllCrops:
      'To see more accurate results for fixed cost distribution, please add all crops to the variable costs table',
    poundsPerHa: '£/ha',
    salePrice: 'Sale Price',
    seedCost: 'Seed Cost',
    summary: 'Summary',
    totalArea: 'Total Area',
    totalAreaMsg: 'The total area covered.',
    totalCost: 'Total Cost',
    totalCostMsg: 'The total budgeted cost to grow all crops in this year.',
    totalPounds: 'Total (£)',
    totalSales: 'Total Sales',
    totalSalesMsg: 'The total expected sales for all crops.',
    variableCosts: 'Variable costs',
  },
  company: {
    areasServiced: 'Areas Serviced',
    companyInformation: 'Company Information',
    farmsServiced: 'Farms Serviced',
    users: 'Users',
  },
  config: {
    company: '{brand}',
    dataEmailAddress: '{brandEmail}',
    tabTitle: '{brand}',
  },
  content: {
    last_updated: 'Last updated',
  },
  dashboard: {
    dashboard: 'Dashboard',
    data: 'Data',
    data_msg: 'Send new data for processing to {brandEmail}.',
    good_afternoon: 'Good afternoon {name}',
    good_evening: 'Good evening {name}',
    good_morning: 'Good morning {name}',
    helpful_links: 'Helpful links',
    notifications: 'Notifications',
    notifications_msg: 'Set your notification preferences and never miss an update.',
    update_perfs: 'Update preferences',
    update_watchlist: 'Set Watchlist alerts',
    users: 'Users',
    users_manage: 'Manage users',
    users_msg: 'Manage access to YAGRO for your colleagues.',
    watchlist: 'Watchlist',
    watchlist_msg: 'Get an alert as soon as a bid or an offer is made for a selected product.',
  },
  data: {
    applications: {
      applicationArea: 'application area',
      applicationData: 'application data',
      rate: 'rate',
      totalCost: 'total cost',
    },
    contracts: {
      contractNumber: 'contract number',
      totalContractedValue: 'total contracted value',
    },
    purchases: {
      actions: 'Actions',
      agronomy: 'Agronomy',
      amount: 'Amount',
      distributor: 'Distributor',
      group: 'Group',
      medium: 'Medium',
      orderDate: 'Order Date',
      packSize: 'Pack Size',
      price: 'Price',
      priceData: 'Price Data',
      pricePerUnit: 'Price Per Unit',
      priceUnit: 'Price/Unit',
      product: 'Product',
      purchase: 'Purchase',
      purchasesData: 'purchases data',
      return: 'Return',
      season: 'Season',
      type: 'Type',
    },
    yields: {
      fieldName: 'field name (area)',
      grade: 'grade',
      harvestDate: 'harvest date',
      harvestYear: 'harvest year',
      moisture: 'moisture',
      quality: 'quality',
      quantity: 'quantity',
      totalHarvestedArea: 'total harvested area',
      yield: 'yield',
      yieldData: 'yield data',
    },
    uploads: {
      pageTitle: 'Uploaded data',
      filename: 'Filename',
      dataType: 'Data Type',
      status: 'Status',
      uploaded: 'Uploaded',
      lastModified: 'Last Modified',
      comments: 'Comments',
      statuses: {
        checking: {
          key: 'Checking',
          value:
            'The "Checking" status means that our platform has found something that needs to be checked before we can complete the upload. Our data team will review the data and try to resolve any errors or gaps. If necessary, they will contact you for more details.',
        },
        uploaded: {
          key: 'Uploaded',
          value:
            'Your data has been successfully uploaded to our platform. This completes the first phase, but does not necessarily mean that your data is immediately visible on the platform. Next, we combine the verified information with the existing datasets and perform a final round of checks. Once this is complete, a YAGRO Customer Success team member will contact you.',
        },
        pending: {
          key: 'Pending',
          value:
            'The status "pending" is the system\'s way of letting you know that it has received your data but is currently uploading other requests. As soon as these are finished, it will be your data\'s turn. This happens automatically; you do not have to do anything.',
        },
        processing: {
          key: 'Processing',
          value:
            '"Processing" status indicates that our platform is processing your data. Automatic checks are performed to test the completeness of the data. If there are no problems, your data will automatically move to the next step. However, if errors or gaps are found, we will update the status and be in touch.',
        },
      },
      instructions:
        'Upload your data by dropping files into the box below, or click on it to select files on your computer.\nYou can upload multiple files at once.\nOnce we finish processing your data you will be notified.',
      modalParts: {
        title: 'Upload your data',
        attachments: 'Attachments',
        comments: 'Comments',
        send: 'Send',
      },
    },
  },
  dataTable: {
    aria: {
      sortAscending: ': activate to sort column ascending',
      sortDescending: ': activate to sort column descending',
    },
    emptyTable: 'No data found.',
    entries: 'entries',
    exportData: 'Export Data',
    filteredFrom: 'filtered from',
    loadingRecords: 'Loading...',
    of: 'of',
    paginate: {
      first: 'First',
      last: 'Last',
      next: 'Next',
      previous: 'Previous',
    },
    processing: 'Processing...',
    search: 'Search:',
    show: 'Show',
    showing: 'Showing',
    to: 'to',
    totalEntries: 'total entries',
    zeroRecords: 'No matching records found',
  },
  dateTimePicker: {
    months: {
      longhand: [
        'January',
        'February',
        'March',
        'April',
        'May',
        'June',
        'July',
        'August',
        'September',
        'October',
        'November',
        'December',
      ],
      shorthand: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
    },
    selectDate: 'Select date...',
    selectDateRange: 'Select date range...',
    weekdays: {
      longhand: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
      shorthand: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
    },
  },
  demo: {
    dnsTitle: 'Data not saved',
    dataNotSaved: 'For demo purposes, data is not saved.',
    dndTitle: 'Data not deleted',
    dataNotDeleted: 'For demo purposes, data is not deleted.',
    rnsTitle: 'Request not sent',
    requestNotSent: 'For demo purposes, requests are not sent to our team.',
  },
  farmDeliveryLocations: {
    actions: 'Actions',
    addDeliveryLocation: 'Add Delivery Location',
    address: 'Address',
    deliveryLocations: 'Delivery Locations',
    name: 'Name',
    postcode: 'Postcode',
  },
  farmInvoiceEntities: {
    actions: 'Actions',
    addInvoiceEntity: 'Add invoice entity',
    address: 'Address',
    invoiceEntities: 'Invoice entities',
    name: 'Name',
    postcode: 'Postcode',
  },
  farmProfile: {
    actions: 'Actions',
    address: 'Address',
    brandingId: 'Branding ID',
    businessName: 'Business name',
    city: 'City',
    company_id: 'Company Identification number',
    contactDetails: 'Contact details (order confirmation)',
    contactName: 'Contact Name',
    contactNumber: 'Contact Number',
    contactRole: 'Contact Role',
    country: 'Country',
    croppedAreainHa: 'Cropped Area',
    editInformation: 'Edit information',
    email: 'Email',
    entries: 'entries',
    information: 'Information',
    logo: 'Logo',
    marketingInformation: 'Marketing information',
    name: 'Name',
    orderNotes: 'Order notes',
    permission: 'Permission to request products via',
    phoneNumber: 'Phone number',
    postcode: 'Postcode',
    search: 'Search',
    shortcode: 'Shortcode',
    show: 'Show',
    state_reg: 'State registration',
    tabTitle: 'Account Details',
    title: 'Account Details',
  },
  feature: {
    analytics: 'Analytics',
    budgets: 'Budgets',
    cropProgress: 'Crop Progress',
    data: 'Data',
    dataFeatures: {
      applications: 'Applications',
      purchases: 'Purchases',
      yields: 'Yields',
      uploads: 'Uploads',
    },
    explorer: 'Explorer',
    fieldByField: 'Field By Field',
    inputs: 'Inputs',
    insights: 'Insights',
    marketWatch: 'MarketWatch',
    marketplace: 'Marketplace',
    prices: 'Prices',
    productList: 'Product List',
    productListDescription:
      'Below is the list of products available on the website to buy and sell, with minimum specifications that any product offered on the website must comply with.',
    programmeCheck: 'Programme Check',
    tracker: 'Tracker',
    virtualGroups: 'Virtual Groups',
    dashboard: 'Dashboard',
    reports: 'Reports',
  },
  fieldByField: {
    search: 'Search all fields and columns',
  },
  general: {
    above: 'Above',
    aboveInContext: 'above',
    actions: 'Actions',
    add: 'Add',
    all: 'All',
    allUsersOfGroup: 'All users in the company',
    amount: 'Quantity',
    anyPrice: 'Any price',
    area: '{0} area',
    areaMsg: 'The area harvested; which may differ from the area farmed.',
    average: 'average {0}',
    below: 'Below',
    belowInContext: 'below',
    bid: 'Bid',
    beta: 'beta',
    bought: 'bought',
    budget: 'Budget | Budgets',
    business: 'Company',
    buy: 'Buy',
    buyDirect: 'Buy Direct',
    cancel: 'Cancel',
    category: 'category',
    chemical: 'chemical | chemicals',
    chosenAmount: 'Select the quantity',
    city: 'City',
    close: 'close',
    collectEnd: 'Collect End',
    collectStart: 'Collect Start',
    collectionDateEnd: 'Collection Date End',
    collectionDateRange: 'Collection Date Range',
    collectionDateStart: 'Collection Date Start',
    collectionPoint: 'Collection Point',
    comment: 'Comment',
    cop: 'cost of production',
    copAbbr: 'CoP',
    copMsg: 'Variable costs of products applied per tonne harvested.',
    // cost: ({ named }) => (named('per') ? `cost per ${named('per')}` : 'cost'),
    cost: 'cost | costs',
    costMsg:
      'The variable costs from products applied to the field, per hectare farmed; which may differ from the area harvested.',
    country: 'Country',
    create: 'Create',
    createBid: 'Create bid',
    createOffer: 'Create offer',
    crop: '@:products.crop | crops',
    date: 'date',
    delete: 'delete',
    deleteBudget: 'Delete Budget',
    deletePosition: 'Delete Position',
    detail: 'Detail',
    dropdownSelect: 'Select',
    edit: 'Edit',
    editBudget: 'Edit Budget',
    editContent: 'Edit content',
    expires: 'Expires',
    expiryDate: 'Expiry Date',
    extra: 'Extra',
    fertiliser: 'fertiliser | fertilisers',
    field: 'field | fields',
    grid: 'grid',
    harvestYear: 'harvest year',
    imageCourtesyOf: 'Image Courtesy of',
    info: 'info',
    learnMoreAbout: 'Learn more about {feature}',
    makeCounterBid: 'Make Counter Bid',
    makeCounterOffer: 'Make Counter Offer',
    market: 'market',
    marketMax: '@:general.market @:general.max',
    marketMedian: '@:general.market @:general.median',
    marketMin: '@:general.market @:general.min',
    marketRange: 'Market Range',
    marketRangeMsg: 'Range of costs for across the market, and where yours fit in.',
    max: 'max',
    median: 'median',
    min: 'min',
    minimumAmount: 'Minimum Quantity',
    na: 'N/A',
    navigateTo: 'Go to {page}',
    no: 'No',
    noThingsFound: ({ named }) => (named('thing') ? `No ${named('thing').toLowerCase()}s found.` : 'Nothing found.'),
    numberOfFields: '# Fields',
    offer: 'Offer',
    ok: 'OK',
    packaging: {
      all: 'All',
      bag: 'Bag',
      bagPrice: 'Bag Price',
      bags: 'Bags',
      bulk: 'Bulk',
      bulkPrice: 'Bulk Price',
      justShowingInterest: 'Just Showing Interest',
      value: 'Packaging',
    },
    perTonne: 'per tonne',
    perUnit: 'per unit',
    performance: '{0} performance',
    previousPage: 'Previous page',
    price: 'Price | Prices',
    product: 'Product',
    proposedAmount: 'Proposed Quantity',
    purchase: 'Purchase',
    quantity: 'Quantity',
    remaining: 'remaining',
    reset: 'Reset',
    sale: 'Sale | Sales',
    save: 'Save',
    searchHere: 'Search for a specific product',
    seeMore: 'See more',
    seeLess: 'See less',
    expandAll: 'Expand all',
    collapseAll: 'Collapse all',
    seed: 'seed | seeds',
    selectOne: 'Select One',
    sell: 'Sell',
    sellDirect: 'Sell Direct',
    showFilters: 'Show filters',
    siteName: 'Demo',
    sold: 'sold',
    state: 'State',
    states: 'States',
    success: 'success',
    table: 'table',
    tonne: 'mt',
    tonnes: 'mts',
    total: 'total {0}',
    trade: 'Trade',
    tradeNoun: 'Trade',
    tradedAt: 'Traded At',
    tradesTitle: 'Trades',
    type: 'Type',
    update: 'Update',
    uploadNewData: 'Upload new data',
    user: 'User',
    variety: 'Variety | varieties',
    view: 'View',
    yes: 'Yes',
    yield: 'Yield',
    year: 'Year',
    yieldMsg: 'The number of tonnes produced per hectare harvested; which may differ from the area farmed.',
    yourFarmAvg: 'Your farm average',
  },
  insights: {
    latestInsights: 'Latest insights',
    tabTitle: 'Insights',
    title: 'Insights',
  },
  login: {
    anErrorOccurred: 'An error occurred, please try again',
    email: 'Email',
    emailAddressRequired: 'An email address is required for us to send you your password reset email',
    failedToReachLoginServer: 'Failed to reach the login server',
    forgottenPassword: 'Forgotten password?',
    logIn: 'Log in',
    logOut: 'Log out',
    password: 'Password',
    passwordResetLinkSent: 'A password reset link has been sent if this address is registered',
    rememberMe: 'Remember me',
    tabTitle: 'Login',
    tagline: 'Data & Technology for Profitable Farm Businesses',
    yagroAdminPlatform: 'Log in to YAGRO Admin',
    yourYagroPlatform: 'Log in to {brand}',
  },
  marketPositions: {
    newBid: 'New Bid',
    newPosition: 'New Position',
    tabTitle: 'Market Positions',
    title: 'Market Positions',
  },
  marketTrades: {
    couldNotFetchTrades: 'Could not fetch trades',
    messageConfirmDelete: 'Are you sure you want to delete this trade, associated bids/offers will also be deleted?',
    tabTitle: 'Market Trades',
    title: 'Market Trades',
    titleConfirmDelete: 'Confirm removal of trade?',
    type: 'Purchase/Sale',
  },
  marketplace: {
    description:
      'Connect directly with live quotes from your suppliers: giving you effortless transparency and choice in the market.',
    requestProducts: 'Request products',
  },
  marketwatch: {
    alerts: {
      absoluteValues: 'Absolute Values',
      actions: 'Actions',
      addAlert: 'Add Alert',
      addNewAlertByFindingAnItem: 'Add a new alert by finding an item in',
      alert: 'Alert',
      allFarmMembers: 'all farm members',
      areYouSureToDelete: 'Are you sure you want to delete this alert?',
      changesBy: 'changes by',
      commodityPricesEndOfDayAlert:
        'Commodity alerts are based on End of Day prices and are sent once a day if the below criteria are met.',
      create: 'Create',
      criteria: 'Criteria',
      days: 'days',
      delete: 'Delete',
      deleteAlertConfirmation: 'Delete alert confirmation',
      dropsBelow: 'drops below',
      dropsBelowMinimum: 'Drops below minimum',
      edit: 'Edit',
      fourteenDays: '14 days',
      historicMinMax: 'Historic Min/Max',
      maximum: 'maximum',
      minimum: 'minimum',
      nearby: 'nearby',
      newAlert: 'New alert',
      noPricingAlerts: 'You have no pricing alerts. Click \'Add alert\' to create one.',
      oneDay: '1 day',
      orFrom: 'or from',
      orMoreComparedToTheAverageForThePast: 'or more compared to the average for the past',
      orMoreComparedToTheAverageForThePastDay: 'or more compared to the average for the past day',
      orMoreComparedToTheAverageForThePrevious: 'or more compared to the average for the previous',
      percentageChange: 'Percentage Change',
      pricingAlerts: 'Pricing alerts',
      product: 'Product',
      recipient: 'Recipient',
      risesAbove: 'rises above',
      risesAboveMaximum: 'Rises above maximum',
      save: 'Save',
      seenInThePastYear: 'seen in past 52 weeks',
      setAlertFor: 'Set alert for',
      sevenDays: '7 days',
      tabTitle: 'Alerts - MarketWatch',
      title: 'MarketWatch - Alerts',
      twentyEightDays: '28 days',
      whenThePriceOf: 'When the price of',
    },
    breadcrumb: {
      commodities: 'Commodities',
    },
    commodities: {
      average: 'Average',
      futures: 'Futures',
      noFutures: 'No Futures Available',
      pricePerTonne: 'Price per tonne',
      pricePerUnit: 'Price per unit',
      tabTitle: 'Commodities - MarketWatch',
      title: 'MarketWatch - Commodities',
    },
    filters: {
      NA: 'N/A',
      average: 'Average',
      combined: 'Combined',
      last12Months: 'Last 12 Months',
      last30Days: 'Last 30 Days',
      last3Years: 'Last 3 years',
      last7Days: 'Last 7 Days',
      last90Days: 'Last 90 Days',
      maximum: 'Maximum',
      minimum: 'Minimum',
      nearby: 'Nearby',
      previousYear: 'Previous Year',
      prices: 'Prices',
      quickRanges: 'Quick ranges',
      to: 'to',
      yearToDate: 'Year to Date',
    },
    inputs: {
      average: 'Average',
      noPriceDataForTheSelectedPeriod: 'No price data for the selected period.',
      pricePer: 'Price per',
      pricePerUnit: 'Price per unit',
      tabTitle: 'Inputs - MarketWatch',
      title: 'MarketWatch - Inputs',
      unableToGetProduct: 'Unable to get product',
      unknown: 'Unknown',
    },
    market_commentary: {
      last_updated: 'Last updated',
      tabTitle: 'Market Commentary',
      title: 'MarketWatch - Market Commentary',
    },
    menu: {
      alerts: 'Alerts',
      commodities: 'Commodities',
      inputs: 'Inputs',
      marketCommentary: 'Market Commentary',
      productCatalogue: 'Product Catalogue',
    },
    purchases: {
      date: 'Date',
      quantity: 'Quantity',
      source: 'Source',
      unitPrice: 'Unit price',
      yourPurchases: 'Your purchases',
    },
    stats: {
      latestPrice: 'Latest Price',
      ninetyDayHighPrice: '90 Day High Price',
      ninetyDayLowPrice: '90 Day Low Price',
      noPricingDataAvailable: 'No pricing data available.',
      yearHighPrice: '1 Year High Price',
      yearLowPrice: '1 Year Low Price',
    },
  },
  metrics: {
    costOfProduction: 'Cost of production',
    costOfProductionMsg: 'Variable costs of products applied per tonne harvested.',
    costPerHa: 'Cost per hectare',
    costPerHaMsg:
      'Variable costs of products applied over the field. Note that if not all fields could be harvested 100% of their area, this will reflect the cost per field area and will not be equal to the cost of production multiplied by yield (which uses the harvested area).',
    harvestedArea: 'Harvested area',
    harvestedAreaMsg: 'The area actually harvested; which may be less than the total area of the field.',
    production: 'Production',
    productionMsg: 'The amount that was harvested.',
    totalCost: 'Total Cost',
    totalCostMsg: 'Variable costs of products applied over the field(s).',
    yield: 'Yield',
    previousCrop: 'Previous crop',
    previousCropMsg: ({ named }) => `The crop grown on this field in ${named('year')} `,
    yieldMsg: 'Tonnes produced per hectare harvested. In this case, the source of this data is: "yield per field".',
  },
  modal: {
    close: 'Close',
  },
  months: {
    april: 'April',
    august: 'August',
    december: 'December',
    february: 'February',
    january: 'January',
    july: 'July',
    june: 'June',
    march: 'March',
    may: 'May',
    november: 'November',
    october: 'October',
    september: 'September',
  },
  myPositions: {
    current: 'Current',
    expired: 'Expired',
    newBid: 'New Bid',
    newPosition: 'New Position',
    tabTitle: 'My Positions',
    title: 'My Positions',
  },
  myTrades: {
    tabTitle: 'My Trades',
    title: 'My Trades',
  },
  newBid: {
    tabTitle: 'New Bid',
    title: 'New Bid',
  },
  newCounterPosition: {
    reloadInitialDataButton: 'Reload Initial Data',
    tabTitle: 'New Counter Position',
    title: 'New Counter Position',
  },
  newPosition: {
    tabTitle: 'New Position',
    title: 'New Position',
  },
  newWatchlistItem: {
    enablePriceOptions: 'Set specific price options',
    tabTitle: 'New Watchlist Item',
    title: 'New Watchlist Item',
    type: 'Type',
  },
  positionDetail: {
    confirmTrade: 'Confirm trade',
    couldNotFetchPosition: 'Could not fetch position.',
    couldNotFetchProducts: 'Could not fetch products.',
    relatedBids: 'Related bids',
    relevantCounterBids: 'Relevant bids',
    relevantCounterOffers: 'Relevant offers',
    relevantCounterPositions: 'Relevant Counterpositions',
    tabTitle: 'Position',
    title: 'Position',
    titleBid: 'Negotiate bid for',
    titleMyBid: 'My bid for',
    titleMyOffer: 'My offer for',
    titleOffer: 'Negotiate offer for',
    tradeAlreadyBeingCreated: 'Trade is already being created',
  },
  positionForm: {
    amount: 'Quantity',
    amountSelectFeedback: 'Selected quantity must be between {min} and {max} tonnes',
    collectionDateRange: 'Collection Date Range',
    commission: '$1.50 USD PMT of commission will be charged by YAGRO to the seller',
    confirmBid: 'Confirm bid',
    confirmOffer: 'Confirm offer',
    confirmUpdate: 'Confirm update',
    confirmationCheck:
      'I confirm that the product I am offering contains the minimum specifications of the platform and that I have read and understood the {termslink} of the platform.',
    couldNotCreatePosition: 'Could not create position.',
    couldNotDeletePosition: 'Could not delete position',
    couldNotFetchCollectionPoints: 'Could not fetch collection points.',
    couldNotFetchPosition: 'Could not fetch position',
    couldNotFetchProducts: 'Could not fetch products.',
    couldNotFetchStates: 'Could not fetch states.',
    couldNotUpdatePosition: 'Could not update position',
    enterYourComment:
      'Enter your comment. Bearing in mind that if the Bid / Offer is based on CIF, it is necessary to insert the delivery location in the comments, for example Sorriso + 10km.',
    expiryDate: 'Expiry Date',
    justShowInterest: 'Just Show Interest',
    paymentTerms: 'Payment Terms',
    paymentTermsText: 'Cash at the point of executing a trade.',
    positionAlreadyBeingCreated: 'Position is already being created',
  },
  positions: {
    anErrorOccurred: 'An error occurred',
    couldNotFetchBids: 'Could not fetch bids.',
    couldNotFetchCollectionPoints: 'Could not fetch collection points.',
    couldNotFetchGroups: 'Could not fetch companies.',
    couldNotFetchOffers: 'Could not fetch offers.',
    couldNotFetchProducts: 'Could not fetch products.',
    couldNotFetchStates: 'Could not fetch states.',
    delete: 'Delete position',
    deleted_message: 'Position deleted',
    justShowingInterest: 'TBD',
    justShowingInterestBid: 'TBD',
    justShowingInterestOffer: 'TBD',
    messageConfirmDelete: 'Are you sure you want to delete this position?',
    titleConfirmDelete: 'Confirm removal of position?',
  },
  pricecheck: {
    getInTouch:
      'To learn how to improve your buying score, click OK and one of the team at {brand} will be in touch shortly.',
    sendActivityDataTo: 'Send your activity data for processing to',
    sendInvoicesTo: 'Send your invoices for processing to',
  },
  product_catalogue: {
    title: 'Product Catalogue',
  },
  products: {
    actives: 'active ingredient | active ingredients',
    alternatives: 'Alternatives',
    alternativesNames: 'Alternatives names',
    category: 'Category',
    compare: 'Compare',
    concentration: 'Concentration',
    crop: 'crop | crops',
    description: 'Description',
    details: 'Details',
    images: 'Images',
    productDetails: ({ named }) => `View ${named('name')} details`,
    ingredient: ({ named, plural }) =>
      named('count') !== undefined
        ? plural(['no ingredients', 'one ingredient', `${named('count')} ingredients`])
        : plural(['ingredient', 'ingredients']),
    ingredients: 'Ingredients',
    manufacturer: 'Manufacturer',
    mappNumber: 'MAPP (Reg.) Number',
    informationURL: 'Information URL',
    keywords: 'Keywords',
    handed: 'Handed',
    formulation: 'Formulation',
    fieldOfUse: 'Field of use',
    inclusionDate: 'Inclusion date',
    lerap: 'LERAP',
    level: 'Level',
    listEntry: 'List entry',
    authorisedData: 'Authorised date',
    authorityHolder: 'Authority holder',
    authLevel: 'Auth level',
    aerialUse: 'Aerial use',
    aquatic: 'Aquatic',
    parallelImport: 'Parallel import',
    models: 'Models',
    registryInformation: 'Registry Information',
    marketingCompany: 'Marketing Company',
    marketwatch: 'MarketWatch',
    noAlternativeProducts: 'There are no alternative products found in our database',
    otherProductDetails: 'Other product details',
    pricingAlerts: 'Pricing Alerts',
    productFilters: 'Product Filters',
    productList: 'Product List',
    productListDescription:
      'Below is the list of products available on the website to buy and sell, with minimum specifications that any product offered on the website must comply with.',
    productName: 'Name',
    products: 'Products',
    productComparison: 'Product Comparison',
    replacements: 'Replacements',
    requestProductQuote: 'Request quote',
    sameActiveSameConcentration: 'same active, same concentration',
    searchForSpecificProduct: 'Search for specific product',
    showProductWithSameActive: 'Showing products with the same active.',
    showProductWithSameActiveAndConcentration: 'Showing products with the same active and concentration.',
    specifications: 'Specifications',
    subcategories: 'Subcategories',
    switchToExactMatchesOnActiveAndConcentration: 'Switch to exact matches on active and concentration',
    switchToMatchesOnActiveOnly: 'Switch to matches on active only',
    thisProductWasReplacedBy: 'This product was replaced by',
    unit: 'Unit',
    view: 'View',
    viewProductDetails: 'View full details',
  },
  profile: {
    actions: 'Actions',
    active: 'Active',
    address: 'Address',
    admin: 'Administrator',
    changePassword: 'Change Password',
    city: 'City',
    client: 'Client',
    country: 'Country',
    deliveryLocations: 'Delivery locations',
    devices: 'Devices',
    editProfile: 'Edit Profile',
    email: 'Email',
    emailNotifications: 'Email notifications',
    firstName: 'First name',
    fullName: 'Full name',
    invoiceEntities: 'Invoice entities',
    language: 'Language',
    lastName: 'Last name',
    myProfile: 'My Profile',
    name: 'Name',
    notProvided: 'Not provided',
    permissions: 'Permissions',
    phoneNumber: 'Phone Number',
    platform: 'Platform',
    postcode: 'Postcode',
    preferences: 'Preferences',
    revoke: 'Revoke',
    tabTitle: 'My Profile',
    title: 'My Profile',
    updatePermissions: 'Update Permissions',
    updatePreferences: 'Update Preferences',
  },
  programmeCheck: {
    applicationArea: 'application area',
    costAvg: '@:general.average @:general.cost',
    costReference: 'reference @:general.cost',
    costTotal: '@:general.total @:general.cost',
    opportunityPc: '% opportunity',
    opportunityTarget: 'target opportunity',
    opportunityTargetAverage: 'average opportunity',
    applicationOf: 'Applications of',
    application: 'Application',
    quantity: 'quantity',
    rate: 'rate',
  },
  public: {
    actionModalDescription:
      'In order to ensure the reliability of all participants on YAGRO Trading platform, all users must pass through a brief registration and verification process before they can begin trading. If you have already registered, click below to sign in. If you would like to register, please enter your details on our sign-up page.',
    actionModalTitle: 'Only registered users can trade on YAGRO',
    login: 'Sign in',
    register: 'Register now',
    registerUrl: 'https://yagro.com.br/cadastre-se/',
  },
  purchasing: {
    buyingProfile: 'buying profile',
    buyingProfileMsg:
      'Learn how many products you are buying at Market price, and the saving potential for all other products you’ve purchased. The bigger the green “Buying Well” bar the better.',
    buyingProfileChart: {
      buyingWell: 'Buying Well',
      fiveToTen: '5-10%',
      greaterThanFifteen: '>15%',
      tenToFifteen: '10-15%',
      upToFive: 'Up to 5%',
    },
    chemicalPurchasing: 'chemical purchasing',
    comingSoon: 'Coming soon',
    // distribution: ({ productCount }) => 'Distribution'
    distributionOne: 'Distribution of prices across',

    distributionTwo: 'submitted products.',
    distributorRebates: 'distributor rebates',
    distributorRebatesMsg: 'Value of rebates not tied to specific products ordered.',
    exclusiveProducts: 'exclusive products',
    exclusiveProductsMsg:
      'How many products are you buying that are only sold by your supplier? Get in touch if you want to learn how much you could save on these products specifically.',
    farmBuyingScore: 'farm buying score',
    farmBuyingScoreMsg:
      'Your overall purchasing performance out of 10, weighted by the price and the amount of each product that you buy.',
    grossExpenditure: 'gross expenditure',
    grossExpenditureMsg: 'The total spent this season, before returns & rebates.',
    mixed: 'mixed',
    noOfProducts: 'no. of products',
    noProductRebates: 'no product rebates',
    noProductsReturned: 'no products returned',
    outOf: 'out of',
    previousTotal: 'previous total',
    previousTotalMsg: 'Total spend net of returns & rebates in the corresponding season in the previous year.',
    productRebates: 'product rebates',
    productRebatesMsg: 'Value of product rebates.',
    products: 'Products',
    productsReturned: 'products returned',
    productsReturnedMsg: 'Value of products returned.',
    seasonSpend: 'season spend',
    sourcesOfChemistry: 'sources of chemistry',
    spendPerCategory: 'spend per category',
    spendProfile: 'spend profile',
    summary: 'summary',
    supplierProfile: 'supplier profile',
    targetOpportunity: 'target opportunity',
    targetOpportunityMsg: 'The amount of money you would save if you bought all of your products at Market price.',
    totalSpend: 'total spend',
    totalSpendMsg: 'Total spend net of returns & rebates.',
  },
  registration: {
    atLeastOneDigit: 'At least 1 digit',
    atLeastOneLowerCase: 'At least 1 lower case character',
    atLeastOneSymbol: 'At least 1 symbol',
    atLeastOneUpperCase: 'At least 1 upper case character',
    confirmPassword: 'Confirm password',
    confirmTerms: 'You must accept Yagro\'s terms and conditions in order to proceed.',
    eightOrMoreCharacters: '8 or more characters',
    email: 'Email',
    firstName: 'First name',
    lastName: 'Last name',
    oldPassword: 'Old password',
    password: 'Password',
    passwordMustHave: 'Passwords must have:',
    phoneNumber: 'Phone number',
    register: 'Register',
    resetPassword: 'Reset password',
    termsCheck: 'I accept Yagro\'s {termslink}.',
    termsLink: 'Terms and Conditions',
    updatePassword: 'Update password',
    updatePasswordPolicy:
      'We have recently enhanced the security on all accounts as part of our commitment to you and your data. Unfortunately, this means you will have to update your password. Would you please complete the step below to proceed to the platform?',
  },
  reports: {
    bodyText: {
      examplesHeader: 'Example Report Types:',
      example1: ({ named }) =>
        named('feature') == 'Analytics'
          ? 'Harvest Report - Providing a review after crops are harvested and yield data submitted to display COP per ton and ha'
          : 'Gross Margin - Produced after all crops have been sold to show cost per ha / cost per ton',
      example2: ({ named }) =>
        named('feature') == 'Analytics'
          ? 'Historic Yield Performance - A view on how yields have increased/decreased over the last five years'
          : 'In Season Tracker Update - Helps demonstrate to board members and teams the spend to date per crop and variety',
      intro: ({ named }) =>
        `The ${named(
          'feature',
        )} "Reports" feature makes it easier for you to share valuable historic insights in a PDF format. We are currently in beta and aim to continuously improve our reports based on your feedback.`,
      onceReceived:
        'Once we have received your request, we will provide the PDF report or contact you for further details within two working days.',
      promises:
        'Our team will work closely with you to understand your needs and ensure that the report provides the right insights and level of detail. Our reports can be tailored to your needs and include detailed information about your crops\' performance, yield, and financial performance.',
      toRequest:
        'To request a report, please send us your requirements or explain what the report is to be used for in the comments box below and we will create your personalised report',
    },
    buttonRequest: 'Request Report',
    legendTitle: 'Request a report',
    pdfReports: 'PDF Reports',
    stillIn: 'This feature is still in',
  },
  salesChart: {
    budget: 'Budget',
    budgetedBreakEven: 'Budgeted Break Even',
    rollingBreakEven: 'Rolling Break Even',
    price: 'Price',
    priceContract: 'Price (contract)',
    quantity: 'Quantity',
    quantityContract: 'Quantity (contract)',
    priceInCurrencyPerTonne: 'Price in £/t',
    quantityInTonne: 'Quantity in t',
    budgetedBreakEvenToolTip:
      'The budgeted break even is based on your budgeted data. It is calculated using the following equation:\n(fixed costs (ha) + variable costs (ha)) / yield (ha) = breakeven sale figure',
    rollingBreakEvenToolTip:
      'The rolling break even is based on the updated data we receive from you. It is calculated using the following equation:\n(fixed costs (ha) + variable costs (ha)) / yield (ha) = breakeven sale figure',
  },
  sidebar: {
    logout: 'Logout',
    productsMenuTitle: 'Products',
    settingsMenuTitle: 'Settings',
    tradingPlatformMenuTitle: 'Trading',
  },
  supplierProfile: {
    actions: 'Actions',
    address: 'Address',
    businessName: 'Business name',
    city: 'City',
    company_id: 'Company Identification number',
    contactDetails: 'Contact details (order confirmation)',
    contactName: 'Contact Name',
    contactNumber: 'Contact Number',
    contactRole: 'Contact Role',
    country: 'Country',
    croppedAreainHa: 'Cropped Area',
    editInformation: 'Edit information',
    email: 'Email',
    entries: 'entries',
    information: 'Information',
    logo: 'Logo',
    marketingInformation: 'Marketing information',
    name: 'Name',
    orderNotes: 'Order notes',
    permission: 'Permission to request products via',
    phoneNumber: 'Phone number',
    postcode: 'Postcode',
    search: 'Search',
    shortcode: 'Shortcode',
    show: 'Show',
    state_reg: 'State registration',
    tabTitle: 'Account Details',
    title: 'Account Details',
  },
  table: {
    emptyFilteredText: 'There are no records matching your request',
    emptyText: 'There are no records to show',
    labelSortAsc: 'Click to sort Ascending',
    labelSortClear: 'Click to clear sorting',
    labelSortDesc: 'Click to sort Descending',
  },
  terms: {
    link: 'Terms and Conditions',
    menuTitle: 'Terms',
    tabTitle: 'Terms and Conditions',
    title: 'Terms and Conditions',
  },
  tracker: {
    achieved: '£ Achieved',
    achievedSales: 'Achieved Sales',
    achievedSalesMsg: 'The total pound value of all your sales.',
    averagePrice: 'Average Price',
    averagePriceMsg: 'Weighted average price per tonne of all your sales.',
    avgPrice: 'Avg. price',
    budgetDeliveredPrice: 'Budget Delivered Price',
    budgetSoldPrice: 'Budget Sold Price',
    premium: 'Premium',
    penalty: 'Penalty',
    budgets: {
      addText: 'Add Budgets',
      editText: 'View and edit Budgets',
    },
    budgetMsg: 'Your {year} budget for each category of spend.',
    budgetPerHa: 'Budget per hectare',
    budgetPerHaMsg:
      'Your budgeted costs per intended hectare. If your actual sown area differs from your budget, this will provide a more effective comparison.',
    budgetPerTonne: 'Budget per tonne',
    budgetPerTonneMsg:
      'Your budgeted costs per intended tonne harvested. If your actual yield differs significantly from your budget, this will provide a more effective comparison.',
    budgetPercent: '% budget',
    budgetPercentMsg: 'The amount you\'ve spent to date relative to your total budget.',
    budgetTotal: 'Total budget',
    budgetTotalMsg: 'Your total budget for variable costs this year.',
    budgetedPrice: 'Budgeted Price',
    budgetedPriceMsg: 'Your budgeted average price per tonne for this seasons crop sales.',
    budgetedSales: 'Budgeted Sales',
    budgetedSalesMsg:
      'Your budgeted total output of your crop, based on the budgeted production and the budgeted sales price.',
    budgetsInfo: 'Build and track against your personalised crop budgets, to keep navigating towards that target.',
    contractDate: 'Contract Date',
    contractQuantity: 'Contract Quantity',
    contracts: 'Contracts',
    costMsg: 'Your cost to date for each category of spend.',
    costToDate: 'Cost to date',
    cropProgressInfo:
      'Measure and manage your business performance live through the season. Track your cost and sales to date.',
    cropProgressInfoShort: 'Track your crops progress',
    cropProduction: 'Crop Production',
    description:
      'Measure and manage your business performance live through the season. Track costs against forecasted or historic spend, and track sales and amount sold to date.',
    estYield: 'Est. Yield',
    learnAboutTracker: 'Learn more about Tracker',
    leftToSell: 'Potential value\nleft to sell',
    leftToSellMsg: 'The pound value of your crop remaining, if you sell it all for the average price achieved to date.',
    maximumPrice: 'Maximum Price',
    maximumPriceMsg: 'Maximum price per tonne of all your sales.',
    maxPrice: 'Max price',
    minimumPrice: 'Minimum Price',
    minimumPriceMsg: 'Minimum price per tonne of all your sales.',
    minPrice: 'Min price',
    noDataUploaded: 'No data uploaded',
    pageTitle: 'YAGRO - Tracker Crop Progress',
    priceContract: 'Price (contract)',
    priceIn: 'Price in £/t',
    purchaseCompany: 'Purchase Company',
    quantityContract: 'Quantity (contract)',
    quantityIn: 'Quantity in t',
    sales: 'Sales',
    salesContracts: 'Sales/Contracts',
    soldDate: 'Sold Date',
    toggle: 'Toggle item on or off by clicking on the legend.',
    toggleCurves: 'Toggle curves on or off by clicking on the legend.',
    tonnageRemaining: 'The total tonnage of your crop still available to sell.',
    tonnageSold: 'Sold tonnage',
    tonnageSoldMsg: 'The total tonnage of your crop already sold or contracted.',
    totalPotentialValue: 'Total potential\nvalue',
    totalPotentialValueMsg:
      'The total output of your crop, based on the sum of your achieved sales and your potential value left to sell.',
    totalPrice: 'Total Price',
    trackerTitle: 'tracker',
    incompleteYield: 'Incomplete yield data',
    estimatedYield: 'Estimated yield',
    variancePercent: '% var',
    variancePercentMsg: 'The %variance shows the difference between this season and last 3 years\' average.',
    viewCostDetails: 'view cost details',
    viewSalesContracts: 'View sales/contracts',
    yourAvgPrice: 'Your Avg Price',
  },
  trade: {
    couldNotCreateTrade: 'Could not create trade.',
    couldNotFetchBids: 'Could not fetch bids',
    couldNotFetchOffers: 'Could not fetch offers',
    couldNotFetchPosition: 'Could not fetch position.',
    couldNotFetchProduct: 'Could not fetch product.',
    couldNotFetchProducts: 'Could not fetch products.',
    delete: 'Delete',
    makeSureYouUpdateOrCancel: 'Make sure you either update or cancel these positions before trading if appropriate.',
    noPositions: 'You currently have no positions to check before trading',
    priceChoice: 'Select packaging option',
    tabTitle: 'Trade',
    title: 'Trade',
    youCurrentlyHaveThesePositions: 'You currently have these positions open for the product:',
  },
  tradeDetail: {
    address: 'Address',
    buyer: 'Buyer',
    city: 'City',
    commentByBuyer: 'Comment by buyer',
    commentBySeller: 'Comment by seller',
    commission: '$1.50 USD PMT of commission will be charged by YAGRO to the seller',
    company: 'Company',
    company_id: 'Registr. Number',
    contact: 'Contact',
    contactName: 'Contact Name',
    couldNotFetchCollectionPoints: 'Could not fetch collection points.',
    couldNotFetchStates: 'Could not fetch states.',
    couldNotFetchTrade: 'Could not fetch trade',
    email: 'Email',
    paymentTerms: 'Payment Terms',
    paymentTermsText: 'Cash at the point of executing a trade.',
    phone: 'Phone',
    reference: 'Referencia',
    seller: 'Seller',
    state_reg: 'State Registration',
    tabTitle: 'Trade',
    title: 'Confirmation of trade',
    tradeDate: 'Trading date',
    tradeMadeBy: '{seller} sold and {buyer} bought as follows',
  },
  updatePosition: {
    reloadInitialDataButton: 'Reload Initial Data',
    tabTitle: 'Update Position',
    title: 'Update Position',
    titleBid: 'Update bid',
    titleOffer: 'Update offer',
  },
  userDevices: {
    actions: 'Actions',
    client: 'Client',
    platform: 'Platform',
    revoke: 'Revoke',
  },
  users: {
    actions: 'Actions',
    email: 'Email',
    entries: 'entries',
    inviteUser: 'Invite User',
    name: 'Name',
    permissions: 'Permissions',
    search: 'Search',
    show: 'Show',
    tabTitle: 'Users',
    title: 'Users',
  },
  virtualGroups: {
    buyingScore: 'buying score',
    cropPerformance: 'crop performance',
    kpiComingSoon: 'KPI Coming Soon...',
    kpiLeaderboard: 'kpi leaderboard',
    noSharedCrops: 'No shared crops in the year',
    pricePerformance: 'price performance',
    virtualGroupAlertDetail:
      'You\'ll notice we have removed the Price Performance section from your Virtual Groups. The Buying Score we calculate for each farm based on purchase information is no longer a comparable metric. We have had feedback that farm-level procurement scores are difficult to compare. You can\'t really check the supporting data for each farm as there is no minimum of purchases or products, so it can give a misleading insight. We are determined to make Virtual Groups the easiest way to reliable compare against others, and therefore decided to remove it. We are exploring other options we believe will add more value to your experience, such as adding variety level permissions and more crop sales related data.',
    virtualGroupAlertTitle: 'Price Performance section removed from Virtual Groups',
  },
  watchlist: {
    delete: 'Delete',
    newWatchlistItem: 'New Watchlist Item',
    tabTitle: 'Watchlist',
    title: 'Watchlist',
  },
  watchlistItems: {
    couldNotDeleteWatchlistItem: 'Unable to delete watchlist item',
    couldNotFetchProducts: 'Could Not Fetch Products',
    couldNotFetchStates: 'Could not fetch states.',
    couldNotFetchWatchlistItems: 'Could Not Fetch Watchlist Items',
  },
  yAlert: {
    close: 'Close',
  },
}
